<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.github.attemper.core.dao.mapper.arg.ArgMapper">
    <insert id="add" parameterType="com.github.attemper.common.result.dispatch.arg.Arg">
        INSERT INTO ${tablePrefix}arg (
            ARG_NAME,
            ARG_TYPE,
            ARG_VALUE,
            GENERIC_TYPE,
            REMARK,
            TENANT_ID
        )
        VALUES
        (
            #{argName, jdbcType=VARCHAR},
            #{argType, jdbcType=INTEGER},
            #{argValue, jdbcType=VARCHAR},
            #{genericType, jdbcType=INTEGER},
            #{remark, jdbcType=VARCHAR},
            #{tenantId, jdbcType=VARCHAR}
        );
    </insert>

    <update id="update" parameterType="com.github.attemper.common.result.dispatch.arg.Arg">
        UPDATE
        ${tablePrefix}arg
        SET
        ARG_TYPE = #{argType, jdbcType=INTEGER},
        GENERIC_TYPE = #{genericType, jdbcType=INTEGER},
        ARG_VALUE = #{argValue, jdbcType=VARCHAR},
        REMARK = #{remark, jdbcType=VARCHAR}
        <where>
            <include refid="condArgName"/>
            <include refid="condTenantId"/>
        </where>
    </update>

    <select id="get" parameterType="map" resultType="com.github.attemper.common.result.dispatch.arg.Arg">
        SELECT *
        FROM ${tablePrefix}arg
        <where>
            <include refid="condArgName"/>
            <include refid="condTenantId"/>
        </where>
    </select>

    <select id="list" parameterType="map" resultType="com.github.attemper.common.result.dispatch.arg.Arg">
        SELECT *
        FROM ${tablePrefix}arg
        <where>
            <if test="argName != null">
                and lower(ARG_NAME) like concat('%', lower(#{argName, jdbcType=VARCHAR}), '%')
            </if>
            <if test="argType != null">
                and ARG_TYPE = #{argType, jdbcType = INTEGER}
            </if>
            <if test="argValue != null">
                and lower(ARG_VALUE) like concat('%', lower(#{argValue, jdbcType = VARCHAR}), '%')
            </if>
            <if test="remark != null">
                and lower(REMARK) like concat('%', lower(#{remark, jdbcType = VARCHAR}), '%')
            </if>
            <include refid="condTenantId"/>
        </where>
        <choose>
            <when test="sort == null">
                order by ARG_NAME ${direction}
            </when>
            <otherwise>
                order by ${sort} ${direction}
            </otherwise>
        </choose>
    </select>

    <delete id="delete" parameterType="map">
        delete from ${tablePrefix}arg
        <where>
            ARG_NAME in
            <foreach item="argName" collection="argNames" open="(" separator="," close=")">
                #{argName}
            </foreach>
            <include refid="condTenantId"/>
        </where>
    </delete>

    <select id="getDatasource" parameterType="map"
            resultType="com.github.attemper.common.result.dispatch.datasource.DataSourceInfo">
        select d.*
        from ${tablePrefix}datasource d
        join ${tablePrefix}arg_datasource ad
        USING (DB_NAME, TENANT_ID)
        join ${tablePrefix}arg a
        USING (ARG_NAME, TENANT_ID)
        <where>
            <include refid="condArgName"/>
            <include refid="condTenantId"/>
        </where>
    </select>

    <delete id="deleteArgDatasource" parameterType="map">
        DELETE FROM t using ${tablePrefix}arg_datasource t
        <where>
            <include refid="condArgName"/>
            <include refid="condTenantId"/>
        </where>
    </delete>

    <insert id="saveArgDatasource" parameterType="map">
        insert into ${tablePrefix}arg_datasource
        (
        ARG_NAME,
        DB_NAME,
        TENANT_ID
        )
        values
        (
        #{argName, jdbcType=VARCHAR},
        #{dbName, jdbcType=VARCHAR},
        #{tenantId, jdbcType=VARCHAR}
        )
    </insert>

    <sql id="condArgName">
        <if test="argName != null">
            and ARG_NAME = #{argName, jdbcType=VARCHAR}
        </if>
    </sql>

    <sql id="condTenantId">
        <if test="tenantId != null">
            and TENANT_ID = #{tenantId, jdbcType=VARCHAR}
        </if>
    </sql>

</mapper>