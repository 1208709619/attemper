<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.github.attemper.core.dao.dispatch.DelayJobMapper">

    <insert id="add" parameterType="com.github.attemper.common.result.dispatch.delay.DelayJob">
        INSERT INTO ${tablePrefix}delay_job (
            ID,
            JOB_NAME,
            STATUS,
            REQUEST_TIME,
            TENANT_ID
        )
        VALUES
        (
            #{id, jdbcType=VARCHAR},
            #{jobName, jdbcType=VARCHAR},
            #{status, jdbcType=INTEGER},
            #{requestTime, jdbcType=INTEGER},
            #{tenantId, jdbcType=VARCHAR}
        )
    </insert>

    <select id="list" parameterType="map" resultType="com.github.attemper.common.result.dispatch.delay.DelayJob">
        <include refid="infoSql"/>
        <where>
            <if test="id != null">
                AND LOWER(dj.ID) LIKE CONCAT(CONCAT('%', LOWER(#{id, jdbcType=VARCHAR})), '%')
            </if>
            <if test="jobName != null">
                AND LOWER(j.JOB_NAME) LIKE CONCAT(CONCAT('%', LOWER(#{jobName, jdbcType=VARCHAR})), '%')
            </if>
            <if test="displayName != null">
                AND LOWER(j.DISPLAY_NAME) LIKE CONCAT(CONCAT('%', LOWER(#{displayName, jdbcType=VARCHAR})), '%')
            </if>
            <if test="status != null &amp;&amp;status.size() &gt; 0">
                AND dj.STATUS IN
                <foreach item="item" collection="status" open="(" separator="," close=")">
                    #{item, jdbcType=INTEGER}
                </foreach>
            </if>
            <include refid="condTenantId"/>
        </where>
        <choose>
            <when test="sort == null">
                order by REQUEST_TIME DESC
            </when>
            <otherwise>
                order by ${sort}
            </otherwise>
        </choose>
    </select>

    <select id="get" parameterType="java.lang.String" resultType="com.github.attemper.common.result.dispatch.delay.DelayJob">
        <include refid="infoSql"/>
        <where>
            AND dj.ID = #{1, jdbcType=VARCHAR}
        </where>
    </select>

    <delete id="delete" parameterType="map">
        DELETE FROM ${tablePrefix}delay_job
        <where>
            ID in
            <foreach item="id" collection="ids" open="(" separator="," close=")">
                #{id, jdbcType=VARCHAR}
            </foreach>
        </where>
    </delete>

    <sql id="infoSql">
        SELECT dj.*, j.DISPLAY_NAME FROM ${tablePrefix}delay_job dj JOIN ${tablePrefix}job j ON dj.JOB_NAME = j.JOB_NAME AND dj.TENANT_ID = j.TENANT_ID
    </sql>

    <sql id="condJobName">
        <if test="jobName != null">
            AND dj.JOB_NAME = #{jobName, jdbcType=VARCHAR}
        </if>
    </sql>

    <sql id="condTenantId">
        <if test="tenantId != null">
            AND dj.TENANT_ID = #{tenantId, jdbcType=VARCHAR}
        </if>
    </sql>
</mapper>