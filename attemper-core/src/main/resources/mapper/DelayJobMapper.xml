<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.github.attemper.core.dao.dispatch.DelayJobMapper">

    <insert id="add" parameterType="com.github.attemper.common.result.dispatch.delay.DelayJob">
        INSERT INTO ${tablePrefix}delay_job (
            ID,
            JOB_NAME,
            STATUS,
            REQUEST_TIME,
            TENANT_ID
        )
        VALUES
        (
            #{id, jdbcType=VARCHAR},
            #{jobName, jdbcType=VARCHAR},
            #{status, jdbcType=INTEGER},
            #{requestTime, jdbcType=TIMESTAMP},
            #{tenantId, jdbcType=VARCHAR}
        )
    </insert>

    <select id="list" parameterType="map" resultType="com.github.attemper.common.result.dispatch.delay.DelayJob">
        <include refid="infoSql"/>
        <where>
            <if test="id != null">
                and lower(dj.ID) like concat('%', lower(#{id, jdbcType=VARCHAR}), '%')
            </if>
            <if test="jobName != null">
                and lower(j.JOB_NAME) like concat('%', lower(#{jobName, jdbcType=VARCHAR}), '%')
            </if>
            <if test="displayName != null">
                and lower(j.DISPLAY_NAME) like concat('%', lower(#{displayName, jdbcType=VARCHAR}), '%')
            </if>
            <if test="status != null &amp;&amp;status.size() &gt; 0">
                and dj.STATUS in
                <foreach item="item" collection="status" open="(" separator="," close=")">
                    #{item, jdbcType=INTEGER}
                </foreach>
            </if>
            <include refid="condTenantId"/>
        </where>
        <choose>
            <when test="sort == null">
                order by REQUEST_TIME DESC
            </when>
            <otherwise>
                order by ${sort}
            </otherwise>
        </choose>
    </select>

    <select id="get" parameterType="map" resultType="com.github.attemper.common.result.dispatch.delay.DelayJob">
        <include refid="infoSql"/>
        <where>
            <if test="id != null">
                and dj.ID = #{id, jdbcType=VARCHAR}
            </if>
        </where>
    </select>

    <sql id="infoSql">
        SELECT dj.*, j.`DISPLAY_NAME` FROM ${tablePrefix}delay_job dj JOIN ${tablePrefix}job j USING(JOB_NAME, TENANT_ID)
    </sql>

    <sql id="condJobName">
        <if test="jobName != null">
            and dj.JOB_NAME = #{jobName, jdbcType=VARCHAR}
        </if>
    </sql>

    <sql id="condTenantId">
        <if test="tenantId != null">
            and dj.TENANT_ID = #{tenantId, jdbcType=VARCHAR}
        </if>
    </sql>
</mapper>