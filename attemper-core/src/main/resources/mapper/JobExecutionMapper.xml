<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.github.attemper.core.dao.mapper.monitor.JobExecutionMapper">

    <delete id="delete" parameterType="com.github.attemper.common.result.dispatch.monitor.JobInstance">
        DELETE FROM j USING ${tablePrefix}job_execution j
        <where>
            <include refid="condId"/>
        </where>
    </delete>

    <delete id="deleteAct" parameterType="com.github.attemper.common.result.dispatch.monitor.JobInstance">
        DELETE FROM j USING ${tablePrefix}job_execution_act j
        <where>
            <include refid="condRootProcInstId"/>
        </where>
    </delete>

    <select id="list" parameterType="map" resultType="com.github.attemper.common.result.dispatch.monitor.JobInstance">
        <!-- never return column LOG_TEXT here,because it may be every large -->
        SELECT * FROM (
        SELECT
        t.ID,
        t.PROC_INST_ID,
        t.ROOT_PROC_INST_ID,
        t.JOB_NAME,
        t.DISPLAY_NAME,
        t.TRIGGER_NAME,
        t.PROC_DEF_ID,
        t.START_TIME,
        t.END_TIME,
        t.DURATION,
        t.STATUS,
        t.TENANT_ID
        FROM ${tablePrefix}job_execution t
        LEFT JOIN ${tablePrefix}job job USING (JOB_NAME, TENANT_ID)
        ) j
        <where>
            <if test="jobName != null">
                and lower(JOB_NAME) like concat('%', lower(#{jobName, jdbcType=VARCHAR}), '%')
            </if>
            <if test="displayName != null">
                and lower(DISPLAY_NAME) like concat('%', lower(#{displayName, jdbcType=VARCHAR}), '%')
            </if>
            <if test="status != null &amp;&amp;status.size() &gt; 0">
                and STATUS in
                <foreach item="item" collection="status" open="(" separator="," close=")">
                    #{item, jdbcType=INTEGER}
                </foreach>
            </if>
            <if test="lowerStartTime != null">
                and START_TIME &gt;= #{lowerStartTime, jdbcType=VARCHAR}
            </if>
            <if test="upperStartTime != null">
                and START_TIME &lt;= #{upperStartTime, jdbcType=VARCHAR}
            </if>
            <if test="lowerEndTime != null">
                and END_TIME &gt; #{lowerEndTime, jdbcType=VARCHAR}
            </if>
            <if test="upperEndTime != null">
                and END_TIME &lt;= #{upperEndTime, jdbcType=VARCHAR}
            </if>
            <include refid="condTenantId"></include>
        </where>
        <choose>
            <when test="sort == null">
                order by START_TIME
            </when>
            <otherwise>
                order by ${sort}
            </otherwise>
        </choose>
    </select>

    <sql id="condId">
        and j.ID = #{id, jdbcType=VARCHAR}
    </sql>

    <sql id="condProcInstId">
        <if test="procInstId != null">
            and j.PROC_INST_ID = #{procInstId, jdbcType=VARCHAR}
        </if>
    </sql>

    <sql id="condRootProcInstId">
        <if test="rootProcInstId != null">
            and j.ROOT_PROC_INST_ID = #{rootProcInstId, jdbcType=VARCHAR}
        </if>
    </sql>

    <sql id="condActInstId">
        <if test="actInstId != null">
            and j.ACT_INST_ID = #{actInstId, jdbcType=VARCHAR}
        </if>
    </sql>

    <sql id="condTenantId">
        <if test="tenantId != null">
            and j.TENANT_ID = #{tenantId, jdbcType=VARCHAR}
        </if>
    </sql>
</mapper>