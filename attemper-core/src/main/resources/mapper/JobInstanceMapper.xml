<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.github.attemper.core.dao.mapper.instance.JobInstanceMapper">

    <select id="get" parameterType="string"
            resultType="com.github.attemper.common.result.dispatch.instance.JobInstance">
        SELECT * FROM ${tablePrefix}job_instance j WHERE ID = #{1}
    </select>

    <select id="count" parameterType="map" resultType="int">
        SELECT COUNT(*) FROM ${tablePrefix}job_instance j
        <where>
            <include refid="condJobName"/>
            <include refid="condTenantId"/>
            <if test="status != null &amp;&amp;status.size() &gt; 0">
                <choose>
                    <when test="status.size() == 1">
                        AND STATUS = #{status, jdbcType=INTEGER}
                    </when>
                    <otherwise>
                        AND STATUS in
                        <foreach item="item" collection="status" open="(" separator="," close=")">
                            #{item, jdbcType=INTEGER}
                        </foreach>
                    </otherwise>
                </choose>
            </if>
        </where>
    </select>

    <select id="listChildren" parameterType="string"
            resultType="com.github.attemper.common.result.dispatch.instance.JobInstanceWithChildren">
        SELECT * FROM ${tablePrefix}job_instance j WHERE PARENT_ID = #{1} ORDER BY START_TIME DESC
    </select>

    <select id="getAct" parameterType="string"
            resultType="com.github.attemper.common.result.dispatch.instance.JobInstanceAct">
        SELECT * FROM ${tablePrefix}job_instance_act j WHERE ACT_INST_ID = #{1}
    </select>

    <insert id="add" parameterType="com.github.attemper.common.result.dispatch.instance.JobInstance">
        INSERT INTO ${tablePrefix}job_instance
        <include refid="insertSql"/>
    </insert>

    <sql id="insertSql">
        (
            ID,
            PROC_INST_ID,
            ROOT_PROC_INST_ID,
            JOB_NAME,
            DISPLAY_NAME,
            TRIGGER_NAME,
            PROC_DEF_ID,
            START_TIME,
            END_TIME,
            DURATION,
            STATUS,
            CODE,
            MSG,
            PARENT_ID,
            RETRIED,
            SCHEDULER_URI,
            EXECUTOR_URI,
            TENANT_ID
        )
        VALUES
        (
            #{id, jdbcType=VARCHAR},
            #{procInstId, jdbcType=VARCHAR},
            #{rootProcInstId, jdbcType=VARCHAR},
            #{jobName, jdbcType=VARCHAR},
            #{displayName, jdbcType=VARCHAR},
            #{triggerName, jdbcType=VARCHAR},
            #{procDefId, jdbcType=VARCHAR},
            #{startTime, jdbcType=TIMESTAMP},
            #{endTime, jdbcType=TIMESTAMP},
            #{duration, jdbcType=INTEGER},
            #{status, jdbcType=INTEGER},
            #{code, jdbcType=INTEGER},
            #{msg, jdbcType=VARCHAR},
            #{parentId, jdbcType=VARCHAR},
            #{retried, jdbcType=INTEGER},
            #{schedulerUri, jdbcType=VARCHAR},
            #{executorUri, jdbcType=VARCHAR},
            #{tenantId, jdbcType=VARCHAR}
        )
    </sql>

    <update id="update" parameterType="com.github.attemper.common.result.dispatch.instance.JobInstance">
        UPDATE ${tablePrefix}job_instance j
        <include refid="updateSql"/>
    </update>

    <sql id="updateSql">
        <set>
            <if test="procInstId != null">
                PROC_INST_ID = #{procInstId, jdbcType=VARCHAR},
            </if>
            <if test="rootProcInstId != null">
                ROOT_PROC_INST_ID = #{rootProcInstId, jdbcType=VARCHAR},
            </if>
            <if test="procDefId != null">
                PROC_DEF_ID = #{procDefId, jdbcType=VARCHAR},
            </if>
            <if test="endTime != null">
                END_TIME = #{endTime, jdbcType=TIMESTAMP},
            </if>
            <if test="duration != null">
                DURATION = #{duration, jdbcType=INTEGER},
            </if>
            <if test="status != null">
                STATUS = #{status, jdbcType=INTEGER},
            </if>
            <if test="code != null">
                CODE = #{code, jdbcType=INTEGER},
            </if>
            <if test="msg != null">
                MSG = #{msg, jdbcType=VARCHAR},
            </if>
            <if test="parentId != null">
                PARENT_ID = #{parentId, jdbcType=VARCHAR},
            </if>
            <if test="retried != null">
                RETRIED = #{retried, jdbcType=INTEGER},
            </if>
        </set>
        <where>
            <include refid="condId"/>
        </where>
    </sql>

    <insert id="addAct" parameterType="com.github.attemper.common.result.dispatch.instance.JobInstanceAct">
        INSERT INTO ${tablePrefix}job_instance_act
        <include refid="insertActSql"/>
    </insert>

    <sql id="insertActSql">
        (
            ID,
            ACT_INST_ID,
            PARENT_ACT_INST_ID_,
            EXECUTION_ID,
            PROC_INST_ID,
            ROOT_PROC_INST_ID,
            ACT_ID,
            ACT_NAME,
            ACT_TYPE,
            START_TIME,
            END_TIME,
            DURATION,
            STATUS,
            LOG_KEY,
            LOG_TEXT
        )
        VALUES
        (
            #{id, jdbcType=VARCHAR},
            #{actInstId, jdbcType=VARCHAR},
            #{parentActInstId, jdbcType=VARCHAR},
            #{executionId, jdbcType=VARCHAR},
            #{procInstId, jdbcType=VARCHAR},
            #{rootProcInstId, jdbcType=VARCHAR},
            #{actId, jdbcType=VARCHAR},
            #{actName, jdbcType=VARCHAR},
            #{actType, jdbcType=VARCHAR},
            #{startTime, jdbcType=TIMESTAMP},
            #{endTime, jdbcType=TIMESTAMP},
            #{duration, jdbcType=INTEGER},
            #{status, jdbcType=INTEGER},
            #{logKey, jdbcType=VARCHAR},
            #{logText, jdbcType=VARCHAR}
        )
    </sql>

    <update id="updateAct" parameterType="com.github.attemper.common.result.dispatch.instance.JobInstanceAct">
        UPDATE ${tablePrefix}job_instance_act j
        <include refid="updateActSql"/>
    </update>

    <sql id="updateActSql">
        <set>
            <if test="status != null">
                STATUS = #{status, jdbcType=INTEGER},
            </if>
            <if test="endTime != null">
                END_TIME = #{endTime, jdbcType=TIMESTAMP},
            </if>
            <if test="duration != null">
                DURATION = #{duration, jdbcType=INTEGER},
            </if>
            <if test="bizUri != null">
                BIZ_URI = #{bizUri, jdbcType=INTEGER},
            </if>
            <if test="logKey != null">
                LOG_KEY = IF(LOG_KEY IS NULL, #{logKey, jdbcType=VARCHAR}, concat(LOG_KEY, ',',
                #{logKey, jdbcType=VARCHAR})),
            </if>
            <if test="logText != null">
                LOG_TEXT = IF(LOG_TEXT IS NULL, #{logText, jdbcType=VARCHAR}, concat(LOG_TEXT, ',',
                #{logText, jdbcType=VARCHAR})),
            </if>
        </set>
        <where>
            <include refid="condActInstId"/>
        </where>
    </sql>

    <select id="listInstance" parameterType="map"
            resultType="com.github.attemper.common.result.dispatch.instance.JobInstanceWithChildren">
        SELECT * FROM ${tablePrefix}job_instance j
        <where>
            <if test="jobName != null">
                and lower(JOB_NAME) like concat('%', lower(#{jobName, jdbcType=VARCHAR}), '%')
            </if>
            <if test="displayName != null">
                and lower(DISPLAY_NAME) like concat('%', lower(#{displayName, jdbcType=VARCHAR}), '%')
            </if>
            <if test="status != null &amp;&amp;status.size() &gt; 0">
                and STATUS in
                <foreach item="item" collection="status" open="(" separator="," close=")">
                    #{item, jdbcType=INTEGER}
                </foreach>
            </if>
            <if test="lowerStartTime != null">
                and START_TIME &gt;= #{lowerStartTime, jdbcType=VARCHAR}
            </if>
            <if test="upperStartTime != null">
                and START_TIME &lt;= #{upperStartTime, jdbcType=VARCHAR}
            </if>
            <if test="lowerEndTime != null">
                and END_TIME &gt; #{lowerEndTime, jdbcType=VARCHAR}
            </if>
            <if test="upperEndTime != null">
                and END_TIME &lt;= #{upperEndTime, jdbcType=VARCHAR}
            </if>
            <include refid="condRootProcInstId"/>
            <include refid="condTenantId"/>
        </where>
        <choose>
            <when test="sort == null">
                order by START_TIME DESC
            </when>
            <otherwise>
                order by ${sort}
            </otherwise>
        </choose>
    </select>

    <select id="listAct" parameterType="map"
            resultType="com.github.attemper.common.result.dispatch.instance.JobInstanceAct">
        SELECT act.*
        FROM ${tablePrefix}job_instance_act act
        JOIN ${tablePrefix}job_instance j
        ON act.ROOT_PROC_INST_ID = j.ROOT_PROC_INST_ID
        <where>
            <include refid="condRootProcInstId"/>
            <if test="actId != null">
                and act.ACT_ID = #{actId, jdbcType=VARCHAR}
            </if>
        </where>
    </select>

    <sql id="condId">
        <if test="id != null">
            and j.ID = #{id, jdbcType=VARCHAR}
        </if>
    </sql>

    <sql id="condProcInstId">
        <if test="procInstId != null">
            and j.PROC_INST_ID = #{procInstId, jdbcType=VARCHAR}
        </if>
    </sql>

    <sql id="condRootProcInstId">
        <if test="rootProcInstId != null">
            and j.ROOT_PROC_INST_ID = #{rootProcInstId, jdbcType=VARCHAR}
        </if>
    </sql>

    <sql id="condActInstId">
        <if test="actInstId != null">
            and j.ACT_INST_ID = #{actInstId, jdbcType=VARCHAR}
        </if>
    </sql>

    <sql id="condJobName">
        <if test="jobName != null">
            AND JOB_NAME = #{jobName, jdbcType=VARCHAR}
        </if>
    </sql>

    <sql id="condTenantId">
        <if test="tenantId != null">
            and j.TENANT_ID = #{tenantId, jdbcType=VARCHAR}
        </if>
    </sql>
</mapper>