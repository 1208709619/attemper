<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.github.attemper.core.dao.application.ProjectMapper">

    <select id="getAll" parameterType="map" resultType="com.github.attemper.common.result.app.project.Project">
        SELECT * FROM ${tablePrefix}project
        <where>
            <include refid="condTenantId_"/>
        </where>
    </select>

    <select id="get" parameterType="map" resultType="com.github.attemper.common.result.app.project.Project">
        SELECT * FROM ${tablePrefix}project
        <where>
            <include refid="condProjectName_" />
            <include refid="condTenantId_" />
        </where>
    </select>

    <insert id="add" parameterType="com.github.attemper.common.result.app.project.Project">
        INSERT INTO ${tablePrefix}project (
            PROJECT_NAME,
            PARENT_PROJECT_NAME,
            DISPLAY_NAME,
            CONTEXT_PATH,
            BIND_EXECUTOR,
            TENANT_ID
            )
        VALUES
            (
            #{projectName, jdbcType=VARCHAR},
            #{parentProjectName, jdbcType=VARCHAR},
            #{displayName, jdbcType=VARCHAR},
            #{contextPath, jdbcType=VARCHAR},
            #{bindExecutor, jdbcType=INTEGER},
            #{tenantId, jdbcType=VARCHAR}
            )
    </insert>

    <update id="update" parameterType="com.github.attemper.common.result.app.project.Project">
        UPDATE
        ${tablePrefix}project
        <set>
            PARENT_PROJECT_NAME = #{parentProjectName, jdbcType=VARCHAR},
            DISPLAY_NAME = #{displayName, jdbcType=VARCHAR},
            CONTEXT_PATH = #{contextPath, jdbcType=VARCHAR},
            BIND_EXECUTOR = #{bindExecutor, jdbcType=INTEGER},
        </set>
        <where>
            <include refid="condProjectName_"/>
            <include refid="condTenantId_"/>
        </where>
    </update>

    <delete id="delete" parameterType="map">
        DELETE FROM ${tablePrefix}project
        <where>
            PROJECT_NAME IN
            <foreach item="projectName" collection="projectNames" open="(" separator="," close=")">
                #{projectName, jdbcType=VARCHAR}
            </foreach>
            <include refid="condTenantId_"/>
        </where>
    </delete>

    <select id="getInfo" parameterType="map"
            resultType="com.github.attemper.common.result.app.project.ProjectInfo">
        SELECT * FROM ${tablePrefix}project_info
        <where>
            <include refid="condProjectName_"/>
            <include refid="condTenantId_"/>
            AND URI = #{uri, jdbcType=VARCHAR}
        </where>
    </select>

    <insert id="addInfo" parameterType="com.github.attemper.common.result.app.project.ProjectInfo">
        INSERT INTO ${tablePrefix}project_info (
            PROJECT_NAME,
            URI,
            URI_TYPE,
            TENANT_ID
            )
        VALUES
            (
            #{projectName, jdbcType=VARCHAR},
            #{uri, jdbcType=VARCHAR},
            #{uriType, jdbcType=INTEGER},
            #{tenantId, jdbcType=VARCHAR}
            )
    </insert>

    <update id="updateInfo" parameterType="com.github.attemper.common.result.app.project.ProjectInfo">
        UPDATE
        ${tablePrefix}project_info
        SET
        URI_TYPE = #{uriType, jdbcType=INTEGER}
        <where>
            <include refid="condProjectName_"/>
            <include refid="condTenantId_"/>
            AND URI = #{uri, jdbcType=VARCHAR}
        </where>
    </update>

    <delete id="deleteInfo">
        DELETE FROM ${tablePrefix}project_info
        <where>
            <include refid="condProjectName_"/>
            <include refid="condTenantId_"/>
            AND URI = #{uri, jdbcType=VARCHAR}
        </where>
    </delete>

    <select id="listInfo" parameterType="map"
            resultType="com.github.attemper.common.result.app.project.ProjectInfo">
        SELECT p.*, pi.URI, pi.URI_TYPE
        FROM ${tablePrefix}project_info pi join ${tablePrefix}project p
        ON pi.PROJECT_NAME = p.PROJECT_NAME AND pi.TENANT_ID = p.TENANT_ID
        <where>
            <include refid="condProjectName"/>
            <include refid="condTenantId"/>
        </where>
    </select>

    <select id="listExecutor" parameterType="map" resultType="java.lang.String">
        SELECT pe.EXECUTOR_URI
        FROM ${tablePrefix}project_executor pe
        JOIN ${tablePrefix}project p
        ON pe.PROJECT_NAME = p.PROJECT_NAME AND pe.TENANT_ID = p.TENANT_ID
        <where>
            <include refid="condProjectName"/>
            <include refid="condTenantId"/>
        </where>
    </select>

    <delete id="deleteExecutors" parameterType="map">
        DELETE FROM ${tablePrefix}project_executor
        <where>
            <include refid="condProjectName_"/>
            <include refid="condTenantId_"/>
        </where>
    </delete>

    <insert id="addExecutors" parameterType="map">
        insert into ${tablePrefix}project_executor
        (
        PROJECT_NAME,
        EXECUTOR_URI,
        TENANT_ID
        )
        values
        <foreach item="executorUri" collection="executorUris" separator=",">
            (
            #{projectName, jdbcType=VARCHAR},
            #{executorUri, jdbcType=VARCHAR},
            #{tenantId, jdbcType=VARCHAR}
            )
        </foreach>
    </insert>

    <sql id="condProjectName">
        AND p.PROJECT_NAME = #{projectName, jdbcType=VARCHAR}
    </sql>

    <sql id="condProjectName_">
        AND PROJECT_NAME = #{projectName, jdbcType=VARCHAR}
    </sql>

    <sql id="condTenantId">
        AND p.TENANT_ID = #{tenantId, jdbcType=VARCHAR}
    </sql>

    <sql id="condTenantId_">
        AND TENANT_ID = #{tenantId, jdbcType=VARCHAR}
    </sql>
</mapper>