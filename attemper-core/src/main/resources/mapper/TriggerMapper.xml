<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.github.attemper.core.dao.mapper.job.TriggerMapper">

    <resultMap id="triggerResultMap" type="com.github.attemper.common.result.dispatch.trigger.sub.CommonTriggerResult">
        <result property="jobName" column="JOB_NAME"/>
        <result property="triggerName" column="TRIGGER_NAME"/>
        <result property="triggerType" column="TRIGGER_TYPE"/>
        <result property="startTime" column="START_TIME"/>
        <result property="endTime" column="END_TIME"/>
        <result property="misfireInstruction" column="MISFIRE_INSTRUCTION"/>
        <result property="tenantId" column="TENANT_ID"/>
        <collection property="calendarNames" ofType="string" javaType="ArrayList">
            <result column="CALENDAR_NAME"/>
        </collection>
    </resultMap>

    <resultMap id="cronResultMap" type="com.github.attemper.common.result.dispatch.trigger.sub.CronTriggerResult"
               extends="triggerResultMap">
        <result property="expression" column="EXPRESSION"/>
        <result property="timeZoneId" column="TIME_ZONE_ID"/>
    </resultMap>

    <select id="getCronTriggers" parameterType="map" resultMap="cronResultMap">
        SELECT *
        FROM ${tablePrefix}job_trigger jt
        JOIN ${tablePrefix}trigger t
        USING (TRIGGER_NAME, TENANT_ID)
        JOIN ${tablePrefix}trigger_cron tc
        USING (TRIGGER_NAME, TENANT_ID)
        LEFT JOIN ${tablePrefix}trigger_calendar
        USING (TRIGGER_NAME, TENANT_ID)
        <where>
            <include refid="condJobName"/>
            <include refid="condTenantId"/>
        </where>
    </select>

    <delete id="deleteCronTriggers" parameterType="map">
        DELETE FROM
        jt, t, tc USING
        ${tablePrefix}job_trigger jt
        JOIN ${tablePrefix}trigger t
        USING (trigger_name, tenant_id)
        JOIN ${tablePrefix}trigger_cron tc
        USING (trigger_name, tenant_id)
        <where>
            <include refid="condJobName"/>
            <include refid="condTenantId"/>
        </where>
    </delete>

    <insert id="saveCronTriggers" parameterType="list">
        <include refid="saveJobTrigger"/>
        insert into ${tablePrefix}trigger_cron
        (
        TRIGGER_NAME,
        EXPRESSION,
        TIME_ZONE_ID,
        TENANT_ID
        )
        values
        <foreach item="item" collection="list" separator=",">
            (
            #{item.triggerName, jdbcType=VARCHAR},
            #{item.expression, jdbcType=VARCHAR},
            #{item.timeZoneId, jdbcType=VARCHAR},
            #{item.tenantId, jdbcType=VARCHAR}
            )
        </foreach>
    </insert>

    <resultMap id="calendarOffsetResultMap"
               type="com.github.attemper.common.result.dispatch.trigger.sub.CalendarOffsetTriggerResult"
               extends="triggerResultMap">
        <result property="startTimeOfDay" column="START_TIME_OF_DAY"/>
        <result property="timeUnit" column="TIME_UNIT"/>
        <result property="repeatCount" column="REPEAT_COUNT"/>
        <result property="innerOffset" column="INNER_OFFSET"/>
        <result property="outerOffset" column="OUTER_OFFSET"/>
        <result property="reversed" column="REVERSED"/>
    </resultMap>

    <select id="getCalendarOffsetTriggers" parameterType="map" resultMap="calendarOffsetResultMap">
        SELECT *
        FROM ${tablePrefix}job_trigger jt
        JOIN ${tablePrefix}trigger t
        USING (TRIGGER_NAME, TENANT_ID)
        JOIN ${tablePrefix}trigger_calendar_offset tco
        USING (TRIGGER_NAME, TENANT_ID)
        LEFT JOIN ${tablePrefix}trigger_calendar tc
        USING (TRIGGER_NAME, TENANT_ID)
        <where>
            <include refid="condJobName"/>
            <include refid="condTenantId"/>
        </where>
    </select>

    <delete id="deleteCalendarOffsetTriggers" parameterType="map">
        DELETE FROM
        jt, t, tco USING
        ${tablePrefix}job_trigger jt
        JOIN ${tablePrefix}trigger t
        USING (trigger_name, tenant_id)
        JOIN ${tablePrefix}trigger_calendar_offset tco
        USING (trigger_name, tenant_id)
        <where>
            <include refid="condJobName"/>
            <include refid="condTenantId"/>
        </where>
    </delete>

    <insert id="saveCalendarOffsetTriggers" parameterType="list">
        <include refid="saveJobTrigger"/>
        insert into ${tablePrefix}trigger_calendar_offset
        (
        TRIGGER_NAME,
        TIME_UNIT,
        START_TIME_OF_DAY,
        INNER_OFFSET,
        OUTER_OFFSET,
        REPEAT_COUNT,
        REVERSED,
        TENANT_ID
        )
        values
        <foreach item="item" collection="list" separator=",">
            (
            #{item.triggerName, jdbcType=VARCHAR},
            #{item.timeUnit, jdbcType=VARCHAR},
            #{item.startTimeOfDay, jdbcType=VARCHAR},
            #{item.innerOffset, jdbcType=INTEGER},
            #{item.outerOffset, jdbcType=INTEGER},
            #{item.repeatCount, jdbcType=INTEGER},
            #{item.reversed, jdbcType=BOOLEAN},
            #{item.tenantId, jdbcType=VARCHAR}
            )
        </foreach>
    </insert>

    <resultMap id="dailyTimeIntervalResultMap"
               type="com.github.attemper.common.result.dispatch.trigger.sub.DailyTimeIntervalTriggerResult"
               extends="triggerResultMap">
        <result property="startTimeOfDay" column="START_TIME_OF_DAY"/>
        <result property="endTimeOfDay" column="END_TIME_OF_DAY"/>
        <result property="interval" column="INTERVAL"/>
        <result property="timeUnit" column="TIME_UNIT"/>
        <result property="repeatCount" column="REPEAT_COUNT"/>
        <result property="daysOfWeek" column="DAYS_OF_WEEK"/>
    </resultMap>

    <select id="getDailyIntervalTriggers" parameterType="map" resultMap="dailyTimeIntervalResultMap">
        SELECT *
        FROM ${tablePrefix}job_trigger jt
        JOIN ${tablePrefix}trigger t
        USING (TRIGGER_NAME, TENANT_ID)
        JOIN ${tablePrefix}trigger_daily_interval tdi
        USING (TRIGGER_NAME, TENANT_ID)
        LEFT JOIN ${tablePrefix}trigger_calendar tc
        USING (TRIGGER_NAME, TENANT_ID)
        <where>
            <include refid="condJobName"/>
            <include refid="condTenantId"/>
        </where>
    </select>

    <delete id="deleteDailyIntervalTriggers" parameterType="map">
        DELETE FROM
        jt, t, tdi USING
        ${tablePrefix}job_trigger jt
        JOIN ${tablePrefix}trigger t
        USING (trigger_name, tenant_id)
        JOIN ${tablePrefix}trigger_daily_interval tdi
        USING (trigger_name, tenant_id)
        <where>
            <include refid="condJobName"/>
            <include refid="condTenantId"/>
        </where>
    </delete>

    <insert id="saveDailyIntervalTriggers" parameterType="list">
        <include refid="saveJobTrigger"/>
        insert into ${tablePrefix}trigger_daily_interval
        (
        TRIGGER_NAME,
        TIME_UNIT,
        DAYS_OF_WEEK,
        START_TIME_OF_DAY,
        END_TIME_OF_DAY,
        `INTERVAL`,
        REPEAT_COUNT,
        TENANT_ID
        )
        values
        <foreach item="item" collection="list" separator=",">
            (
            #{item.triggerName, jdbcType=VARCHAR},
            #{item.timeUnit, jdbcType=VARCHAR},
            #{item.daysOfWeek, jdbcType=VARCHAR},
            #{item.startTimeOfDay, jdbcType=VARCHAR},
            #{item.endTimeOfDay, jdbcType=VARCHAR},
            #{item.interval, jdbcType=INTEGER},
            #{item.repeatCount, jdbcType=INTEGER},
            #{item.tenantId, jdbcType=VARCHAR}
            )
        </foreach>
    </insert>

    <resultMap id="calendarIntervalResultMap"
               type="com.github.attemper.common.result.dispatch.trigger.sub.CalendarIntervalTriggerResult"
               extends="triggerResultMap">
        <result property="interval" column="INTERVAL"/>
        <result property="timeUnit" column="TIME_UNIT"/>
        <result property="repeatCount" column="REPEAT_COUNT"/>
        <result property="preserveDayLight" column="PRESERVE_DAY_LIGHT"/>
        <result property="skipDayIfNoHour" column="SKIP_DAY_IF_NO_HOUR"/>
        <result property="timeZoneId" column="TIME_ZONE_ID"/>
    </resultMap>

    <select id="getCalendarIntervalTriggers" parameterType="map" resultMap="calendarIntervalResultMap">
        SELECT *
        FROM ${tablePrefix}job_trigger jt
        JOIN ${tablePrefix}trigger t
        USING (TRIGGER_NAME, TENANT_ID)
        JOIN ${tablePrefix}trigger_calendar_interval tci
        USING (TRIGGER_NAME, TENANT_ID)
        LEFT JOIN ${tablePrefix}trigger_calendar tc
        USING (TRIGGER_NAME, TENANT_ID)
        <where>
            <include refid="condJobName"/>
            <include refid="condTenantId"/>
        </where>
    </select>

    <delete id="deleteCalendarIntervalTriggers" parameterType="map">
        DELETE FROM
        jt, t, tci USING
        ${tablePrefix}job_trigger jt
        JOIN ${tablePrefix}trigger t
        USING (trigger_name, tenant_id)
        JOIN ${tablePrefix}trigger_calendar_interval tci
        USING (trigger_name, tenant_id)
        <where>
            <include refid="condJobName"/>
            <include refid="condTenantId"/>
        </where>
    </delete>

    <insert id="saveCalendarIntervalTriggers" parameterType="list">
        <include refid="saveJobTrigger"/>
        insert into ${tablePrefix}trigger_calendar_interval
        (
        TRIGGER_NAME,
        TIME_UNIT,
        `INTERVAL`,
        REPEAT_COUNT,
        TIME_ZONE_ID,
        PRESERVE_DAY_LIGHT,
        SKIP_DAY_IF_NO_HOUR,
        TENANT_ID
        )
        values
        <foreach item="item" collection="list" separator=",">
            (
            #{item.triggerName, jdbcType=VARCHAR},
            #{item.timeUnit, jdbcType=VARCHAR},
            #{item.interval, jdbcType=INTEGER},
            #{item.repeatCount, jdbcType=INTEGER},
            #{item.timeZoneId, jdbcType=VARCHAR},
            #{item.preserveDayLight, jdbcType=BOOLEAN},
            #{item.skipDayIfNoHour, jdbcType=BOOLEAN},
            #{item.tenantId, jdbcType=VARCHAR}
            )
        </foreach>
    </insert>

    <select id="getCalendars" parameterType="map"
            resultType="com.github.attemper.common.result.dispatch.calendar.CalendarInfo">
        SELECT c.*
        FROM ${tablePrefix}calendar c
        JOIN ${tablePrefix}trigger_calendar tc
        ON c.CALENDAR_NAME = tc.CALENDAR_NAME
        JOIN ${tablePrefix}trigger t
        ON tc.TRIGGER_NAME = t.TRIGGER_NAME AND tc.TENANT_ID = t.TENANT_ID
        <where>
            <include refid="condTriggerName"/>
            AND (c.TENANT_ID = '' or c.TENANT_ID = #{tenantId, jdbcType=VARCHAR})
        </where>
    </select>

    <delete id="deleteTriggerCalendars" parameterType="map">
        DELETE FROM t using ${tablePrefix}trigger_calendar t
        <where>
            <include refid="condTriggerName"/>
        </where>
    </delete>

    <insert id="saveTriggerCalendars">
        insert into ${tablePrefix}trigger_calendar
        (
        TRIGGER_NAME,
        CALENDAR_NAME,
        TENANT_ID
        )
        values
        <foreach item="calendarName" collection="calendarNames" separator=",">
            (
            #{triggerName, jdbcType=VARCHAR},
            #{calendarName, jdbcType=VARCHAR},
            #{tenantId, jdbcType=VARCHAR}
            )
        </foreach>
    </insert>

    <sql id="saveJobTrigger">
        insert into ${tablePrefix}job_trigger
        (
        TRIGGER_NAME,
        JOB_NAME,
        STATUS,
        TENANT_ID
        )
        values
        <foreach item="item" collection="list" separator=",">
            (
            #{item.triggerName, jdbcType=VARCHAR},
            #{item.jobName, jdbcType=VARCHAR},
            #{item.status, jdbcType=INTEGER},
            #{item.tenantId, jdbcType=VARCHAR}
            )
        </foreach>
        ;
        insert into ${tablePrefix}trigger
        (
        TRIGGER_NAME,
        TRIGGER_TYPE,
        DESCRIPTION,
        START_TIME,
        END_TIME,
        MISFIRE_INSTRUCTION,
        TENANT_ID
        )
        values
        <foreach item="item" collection="list" separator=",">
            (
            #{item.triggerName, jdbcType=VARCHAR},
            #{item.triggerType, jdbcType=VARCHAR},
            #{item.description, jdbcType=VARCHAR},
            #{item.startTime, jdbcType=TIMESTAMP},
            #{item.endTime, jdbcType=TIMESTAMP},
            #{item.misfireInstruction, jdbcType=INTEGER},
            #{item.tenantId, jdbcType=VARCHAR}
            )
        </foreach>
        ;
    </sql>

    <sql id="condJobName">
        <if test="jobName != null">
            and jt.JOB_NAME = #{jobName, jdbcType=VARCHAR}
        </if>
    </sql>

    <sql id="condTriggerName">
        <if test="triggerName != null">
            and t.TRIGGER_NAME = #{triggerName, jdbcType=VARCHAR}
        </if>
    </sql>

    <sql id="condTenantId">
        <if test="tenantId != null">
            and jt.TENANT_ID = #{tenantId, jdbcType=VARCHAR}
        </if>
    </sql>
</mapper>