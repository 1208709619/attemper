<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.github.attemper.sys.dao.TagMapper">

    <select id="get" parameterType="map" resultType="com.github.attemper.common.result.sys.tag.Tag">
        select * from ${tablePrefix}tag t
        <where>
            <include refid="condTagName"/>
        </where>
    </select>

    <insert id="add" parameterType="com.github.attemper.common.result.sys.tag.Tag">
        INSERT INTO ${tablePrefix}tag (
        TAG_NAME,
        DISPLAY_NAME,
        CREATE_TIME,
        UPDATE_TIME,
        REMARK
        )
        VALUES
        (
        #{tagName, jdbcType=VARCHAR},
        #{displayName, jdbcType=VARCHAR},
        #{createTime, jdbcType=TIMESTAMP},
        #{updateTime, jdbcType=TIMESTAMP},
        #{remark, jdbcType=VARCHAR}
        )
    </insert>

    <update id="update" parameterType="com.github.attemper.common.result.sys.tag.Tag">
        UPDATE ${tablePrefix}tag t
        SET
        <if test="displayName != null">
            DISPLAY_NAME = #{displayName, jdbcType=VARCHAR},
        </if>
        UPDATE_TIME = #{updateTime, jdbcType=TIMESTAMP},
        REMARK = #{remark, jdbcType=VARCHAR}
        <where>
            <include refid="condTagName"/>
        </where>
    </update>

    <delete id="delete" parameterType="map">
        delete from t using ${tablePrefix}tag t
        <where>
            <if test="tagNames != null">
                TAG_NAME in
                <foreach item="tagName" collection="tagNames" open="(" separator="," close=")">
                    #{tagName}
                </foreach>
            </if>
        </where>
    </delete>

    <select id="list" parameterType="map" resultType="com.github.attemper.common.result.sys.tag.Tag">
        select * from ${tablePrefix}tag t
        <where>
            <if test="tagName != null">
                and lower(TAG_NAME) like concat('%', lower(#{tagName, jdbcType=VARCHAR}), '%')
            </if>
            <if test="displayName != null">
                and lower(DISPLAY_NAME) like concat('%', lower(#{displayName, jdbcType=VARCHAR}), '%')
            </if>
            <if test="email != null">
                and lower(EMAIL) like concat('%', lower(#{email, jdbcType=VARCHAR}), '%')
            </if>
            <if test="remark != null">
                and lower(REMARK) like concat('%', lower(#{remark, jdbcType=VARCHAR}), '%')
            </if>
        </where>
        <choose>
            <when test="sort == null">
                order by TAG_NAME ${direction}
            </when>
            <otherwise>
                order by ${sort} ${direction}
            </otherwise>
        </choose>
    </select>

    <select id="getTenants" parameterType="map" resultType="com.github.attemper.common.result.sys.tenant.Tenant">
        select te.*
        from ${tablePrefix}tenant te
        join ${tablePrefix}tag_tenant tt
        on te.USER_NAME = tt.USER_NAME
        join ${tablePrefix}tag t
        on tt.TAG_NAME = t.TAG_NAME
        <where>
            <include refid="condTagName"/>
        </where>
        order by te.USER_NAME
    </select>

    <delete id="deleteTenants" parameterType="map">
        DELETE FROM t using ${tablePrefix}tag_tenant t
        <where>
            <include refid="condTagName"/>
        </where>
    </delete>

    <insert id="addTenants" parameterType="map">
        insert into ${tablePrefix}tag_tenant
        (
        TAG_NAME,
        USER_NAME
        )
        values
        <foreach item="userName" collection="userNames" separator=",">
            (
            #{tagName, jdbcType=VARCHAR},
            #{userName, jdbcType=VARCHAR}
            )
        </foreach>
    </insert>

    <select id="getResources" parameterType="map" resultType="string">
        select tr.RESOURCE_NAME
        from ${tablePrefix}tag_resource tr
        join ${tablePrefix}tag t
        on t.TAG_NAME = tr.TAG_NAME
        <where>
            <include refid="condTagName"/>
        </where>
        order by tr.RESOURCE_NAME
    </select>

    <delete id="deleteResources" parameterType="map">
        DELETE FROM t using ${tablePrefix}tag_resource t
        <where>
            <include refid="condTagName"/>
        </where>
    </delete>

    <insert id="addResources">
        insert into ${tablePrefix}tag_resource
        (
        TAG_NAME,
        RESOURCE_NAME
        )
        values
        <foreach item="resourceName" collection="resourceNames" separator=",">
            (
            #{tagName, jdbcType=VARCHAR},
            #{resourceName, jdbcType=VARCHAR}
            )
        </foreach>
    </insert>

    <sql id="condTagName">
        <if test="tagName != null">
            and t.TAG_NAME = #{tagName, jdbcType = VARCHAR}
        </if>
    </sql>

</mapper>