<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.github.attemper.sys.dao.mapper.TenantMapper">

    <select id="get" parameterType="string" resultType="com.github.attemper.common.result.sys.tenant.Tenant">
        select * from ${tablePrefix}tenant t
        <where>
            and USER_NAME = #{1, jdbcType=VARCHAR}
        </where>
    </select>

    <select id="getAdmin" resultType="com.github.attemper.common.result.sys.tenant.Tenant">
        select * from
        ${tablePrefix}tenant t
        where ADMIN = 1
    </select>

    <select id="list" parameterType="map" resultType="com.github.attemper.common.result.sys.tenant.Tenant">
        select *
        from ${tablePrefix}tenant
        <where>
            <if test="userName != null">
                and lower(USER_NAME) like concat('%', lower(#{userName, jdbcType=VARCHAR}), '%')
            </if>
            <if test="displayName != null">
                and lower(DISPLAY_NAME) like concat('%', lower(#{displayName, jdbcType=VARCHAR}), '%')
            </if>
            <if test="email != null">
                and lower(EMAIL) like concat('%', lower(#{email, jdbcType=VARCHAR}), '%')
            </if>
            <if test="mobile != null">
                and lower(MOBILE) like concat('%', lower(#{mobile, jdbcType=VARCHAR}), '%')
            </if>
            <if test="status != null">
                and STATUS = #{status, jdbcType=INTEGER}
            </if>
            <if test="tenantId != null">
                and USER_NAME = #{tenantId, jdbcType=VARCHAR}
            </if>
        </where>
        <choose>
            <when test="sort == null">
                order by USER_NAME ${direction}
            </when>
            <otherwise>
                order by ${sort} ${direction}
            </otherwise>
        </choose>
    </select>

    <insert id="save" parameterType="map">
        <selectKey keyProperty="count" resultType="int" order="BEFORE">
            select count(*)
            from ${tablePrefix}tenant
            where USER_NAME = #{userName, jdbcType=VARCHAR}
        </selectKey>
        <choose>
            <when test="count == 0">
                INSERT INTO ${tablePrefix}tenant (
                USER_NAME,
                DISPLAY_NAME,
                PASSWORD,
                EMAIL,
                MOBILE,
                STATUS,
                ADMIN,
                CREATE_TIME,
                UPDATE_TIME
                )
                VALUES
                (
                #{userName, jdbcType=VARCHAR},
                #{displayName, jdbcType=VARCHAR},
                #{password, jdbcType=VARCHAR},
                #{email, jdbcType=VARCHAR},
                #{mobile, jdbcType=VARCHAR},
                #{status, jdbcType=INTEGER},
                #{admin, jdbcType=VARCHAR},
                #{createTime, jdbcType=TIMESTAMP},
                #{updateTime, jdbcType=TIMESTAMP}
                )
            </when>
            <otherwise>
                UPDATE
                ${tablePrefix}tenant
                SET
                DISPLAY_NAME = #{displayName, jdbcType=VARCHAR},
                <if test="password != null">
                    PASSWORD = #{password, jdbcType=VARCHAR},
                </if>
                EMAIL = #{email, jdbcType=VARCHAR},
                MOBILE = #{mobile, jdbcType=VARCHAR},
                STATUS = #{status, jdbcType=INTEGER},
                ADMIN = #{admin, jdbcType=VARCHAR},
                UPDATE_TIME = #{updateTime, jdbcType=TIMESTAMP}
                WHERE USER_NAME = #{userName, jdbcType=VARCHAR}
            </otherwise>
        </choose>
    </insert>

    <delete id="delete">
        delete from ${tablePrefix}tenant
        <where>
            USER_NAME in
            <foreach item="userName" collection="list" open="(" separator="," close=")">
                #{userName}
            </foreach>
        </where>
    </delete>

    <select id="getResources" parameterType="map" resultType="java.lang.String">
        SELECT tr.RESOURCE_NAME
        FROM ${tablePrefix}tag_resource tr
        JOIN ${tablePrefix}tag ta
        ON tr.TAG_NAME = ta.TAG_NAME
        JOIN ${tablePrefix}tag_tenant tt
        ON ta.TAG_NAME = tt.TAG_NAME
        JOIN ${tablePrefix}tenant t
        ON tt.USER_NAME = t.USER_NAME
        <where>
            <include refid="condUserName"/>
        </where>
    </select>

    <select id="getTags" parameterType="map" resultType="com.github.attemper.common.result.sys.tag.Tag">
        select ta.*
        from ${tablePrefix}tag ta
        join ${tablePrefix}tag_tenant tt
        on tt.TAG_NAME = ta.TAG_NAME
        join ${tablePrefix}tenant t
        on t.USER_NAME = tt.USER_NAME
        <where>
            <include refid="condUserName"/>
        </where>
        order by t.USER_NAME
    </select>

    <delete id="deleteTags" parameterType="map">
        DELETE FROM t USING ${tablePrefix}tag_tenant t
        <where>
            <include refid="condUserName"/>
        </where>
    </delete>

    <insert id="addTags">
        insert into ${tablePrefix}tag_tenant
        (
        TAG_NAME,
        USER_NAME
        )
        values
        <foreach item="tagName" collection="tagNames" separator=",">
            (
            #{tagName, jdbcType=VARCHAR},
            #{userName, jdbcType=VARCHAR}
            )
        </foreach>
    </insert>

    <sql id="condUserName">
        <if test="userName != null">
            and t.USER_NAME = #{userName, jdbcType=VARCHAR}
        </if>
    </sql>
</mapper>