<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.sse.attemper.sys.dao.mapper.UserMapper">

    <select id="login" parameterType="com.sse.attemper.common.result.sys.user.User"
            resultType="com.sse.attemper.common.result.sys.user.User">
        select * from ${tablePrefix}user u
        <where>
            <choose>
                <when test="userName != null">
                    and USER_NAME = #{userName, jdbcType=VARCHAR}
                </when>
                <when test="email != null">
                    and EMAIL = #{email, jdbcType=VARCHAR}
                </when>
                <when test="mobile != null">
                    and MOBILE = #{mobile, jdbcType=VARCHAR}
                </when>
            </choose>
            <if test="password != null">
                and PASSWORD = #{password, jdbcType=VARCHAR}
            </if>
            <include refid="condTenantId"/>
        </where>
    </select>

    <select id="get" parameterType="map" resultType="com.sse.attemper.common.result.sys.user.User">
        select * from ${tablePrefix}user u
        <where>
            <include refid="condUserName"/>
            <include refid="condTenantId"/>
        </where>
    </select>

    <insert id="add" parameterType="com.sse.attemper.common.result.sys.user.User">
        INSERT INTO ${tablePrefix}user (
        USER_NAME,
        DISPLAY_NAME,
        PASSWORD,
        EMAIL,
        MOBILE,
        STATUS,
        CREATE_TIME,
        UPDATE_TIME,
        TENANT_ID
        )
        VALUES
        (
        #{userName, jdbcType=VARCHAR},
        #{displayName, jdbcType=VARCHAR},
        #{password, jdbcType=VARCHAR},
        #{email, jdbcType=VARCHAR},
        #{mobile, jdbcType=VARCHAR},
        #{status, jdbcType=INTEGER},
        #{createTime, jdbcType=TIMESTAMP},
        #{updateTime, jdbcType=TIMESTAMP},
        #{tenantId, jdbcType=VARCHAR}
        )
    </insert>

    <update id="update" parameterType="com.sse.attemper.common.result.sys.user.User">
        UPDATE ${tablePrefix}user u
        SET
        <if test="displayName != null">
            DISPLAY_NAME = #{displayName, jdbcType=VARCHAR},
        </if>
        <if test="password != null">
            PASSWORD = #{password, jdbcType=VARCHAR},
        </if>
        EMAIL = #{email, jdbcType=VARCHAR},
        MOBILE = #{mobile, jdbcType=VARCHAR},
        STATUS = #{status, jdbcType=INTEGER},
        UPDATE_TIME = #{updateTime, jdbcType=TIMESTAMP}
        <where>
            <include refid="condUserName"/>
            <include refid="condTenantId"/>
        </where>
    </update>

    <delete id="delete" parameterType="map">
        delete from u using ${tablePrefix}user u
        <where>
            <if test="userNames != null">
                USER_NAME in
                <foreach item="userName" collection="userNames" open="(" separator="," close=")">
                    #{userName}
                </foreach>
            </if>
            <include refid="condTenantId"/>
        </where>
    </delete>

    <select id="list" parameterType="map" resultType="com.sse.attemper.common.result.sys.user.User">
        select * from ${tablePrefix}user u
        <where>
            <if test="userName != null">
                and lower(USER_NAME) like concat('%', lower(#{userName, jdbcType=VARCHAR}), '%')
            </if>
            <if test="displayName != null">
                and lower(DISPLAY_NAME) like concat('%', lower(#{displayName, jdbcType=VARCHAR}), '%')
            </if>
            <if test="email != null">
                and lower(EMAIL) like concat('%', lower(#{email, jdbcType=VARCHAR}), '%')
            </if>
            <if test="mobile != null">
                and lower(MOBILE) like concat('%', lower(#{mobile, jdbcType=VARCHAR}), '%')
            </if>
            <if test="status != null">
                and STATUS = #{status, jdbcType=INTEGER}
            </if>
            <include refid="condTenantId"/>
        </where>
        <choose>
            <when test="sort == null">
                order by USER_NAME ${direction}
            </when>
            <otherwise>
                order by ${sort} ${direction}
            </otherwise>
        </choose>
    </select>

    <select id="getResources" parameterType="map" resultType="com.sse.attemper.common.result.sys.resource.Resource">
        SELECT r.*
        FROM ${tablePrefix}resource r
        JOIN ${tablePrefix}tag_resource tr
        ON r.RESOURCE_NAME = tr.RESOURCE_NAME AND r.TENANT_ID = tr.TENANT_ID
        JOIN ${tablePrefix}tag t
        ON tr.TAG_NAME = t.TAG_NAME AND tr.TAG_TYPE = t.TAG_TYPE AND tr.TENANT_ID = t.TENANT_ID
        JOIN ${tablePrefix}tag_user tu
        ON t.TAG_NAME = tu.TAG_NAME AND t.TAG_TYPE = tu.TAG_TYPE AND t.TENANT_ID = tu.TENANT_ID
        JOIN ${tablePrefix}user u
        ON tu.USER_NAME = u.USER_NAME AND tu.TENANT_ID = u.TENANT_ID
        <where>
            <include refid="condUserName"/>
            <include refid="condTenantId"/>
        </where>
    </select>

    <select id="getTags" parameterType="map" resultType="com.sse.attemper.common.result.sys.tag.Tag">
        select t.*
        from ${tablePrefix}tag t
        join ${tablePrefix}tag_user tu
          on tu.TAG_NAME = t.TAG_NAME and tu.TAG_TYPE = t.TAG_TYPE and tu.TENANT_ID = t.TENANT_ID
        join ${tablePrefix}user u
        on u.USER_NAME = tu.USER_NAME and u.TENANT_ID = tu.TENANT_ID
        <where>
            <include refid="condUserName"/>
            <include refid="condTenantId"/>
        </where>
        order by u.USER_NAME
    </select>

    <delete id="deleteUserTags" parameterType="map" >
        DELETE FROM t using ${tablePrefix}tag_user t
        <where>
            <if test="userName != null">
                and USER_NAME = #{userName, jdbcType = VARCHAR}
            </if>
            <if test="tagType != null">
                and TAG_TYPE = #{tagType, jdbcType = INTEGER}
            </if>
            <include refid="condTenantId"/>
        </where>
    </delete>

    <insert id="saveUserTags">
        insert into ${tablePrefix}tag_user
        (
        USER_NAME,
        TAG_NAME,
        TAG_TYPE,
        TENANT_ID
        )
        values
        <foreach item="tagName" collection="tagNames" separator=",">
            (
            #{userName, jdbcType=VARCHAR},
            #{tagName, jdbcType=VARCHAR},
            #{tagType, jdbcType=INTEGER},
            #{tenantId, jdbcType=VARCHAR}
            )
        </foreach>
    </insert>

    <sql id="condUserName">
        <if test="userName != null">
            and u.USER_NAME = #{userName, jdbcType=VARCHAR}
        </if>
    </sql>

    <sql id="condTenantId">
        <if test="tenantId != null">
            and u.TENANT_ID = #{tenantId, jdbcType=VARCHAR}
        </if>
    </sql>

</mapper>