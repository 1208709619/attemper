[
  {
    "name": "Sync Http Task",
    "id": "SyncHttpTask",
    "appliesTo": [
      "bpmn:ServiceTask"
    ],
    "properties": [
      {
        "label": "Executor Component",
        "type": "String",
        "editable": true,
        "value": "${syncHttpTask}",
        "binding": {
          "type": "property",
          "name": "camunda:delegateExpression"
        },
        "constraints": {
          "notEmpty": true
        }
      },
      {
        "label": "Sub URL",
        "description": "Sub url of a http api",
        "type": "String",
        "binding": {
          "type": "camunda:property",
          "name": "subUrl"
        }
      },
      {
        "label": "Bean Name",
        "description": "Bean name of a spring component",
        "type": "String",
        "binding": {
          "type": "camunda:property",
          "name": "beanName"
        }
      },
      {
        "label": "Method Name",
        "description": "Method name of the bean above",
        "type": "String",
        "binding": {
          "type": "camunda:property",
          "name": "methodName"
        }
      },
      {
        "label": "Asynchronous Before",
        "type": "Boolean",
        "value": true,
        "binding": {
          "type": "property",
          "name": "camunda:asyncBefore"
        }
      },
      {
        "label": "Asynchronous After",
        "type": "Boolean",
        "value": true,
        "binding": {
          "type": "property",
          "name": "camunda:asyncAfter"
        }
      }
    ],
    "entriesVisible": {
      "_all": true,
      "delegate": false,
      "implementation": false,
      "asyncBefore": false,
      "asyncAfter": false,
      "exclusive": false,
      "documentation": false
    }
  },
  {
    "name": "Async Http Task",
    "id": "AsyncHttpTask",
    "appliesTo": [
      "bpmn:ServiceTask"
    ],
    "properties": [
      {
        "label": "Executor Component",
        "type": "String",
        "editable": true,
        "value": "${asyncHttpTask}",
        "binding": {
          "type": "property",
          "name": "camunda:delegateExpression"
        },
        "constraints": {
          "notEmpty": true
        }
      },
      {
        "label": "Sub URL",
        "description": "sub url of a http api",
        "type": "String",
        "binding": {
          "type": "camunda:property",
          "name": "subUrl"
        }
      },
      {
        "label": "Bean Name",
        "description": "Bean name of a spring component",
        "type": "String",
        "binding": {
          "type": "camunda:property",
          "name": "beanName"
        }
      },
      {
        "label": "Method Name",
        "description": "Method name of the bean above",
        "type": "String",
        "binding": {
          "type": "camunda:property",
          "name": "methodName"
        }
      },
      {
        "label": "Asynchronous Before",
        "type": "Boolean",
        "value": true,
        "binding": {
          "type": "property",
          "name": "camunda:asyncBefore"
        }
      },
      {
        "label": "Asynchronous After",
        "type": "Boolean",
        "value": true,
        "binding": {
          "type": "property",
          "name": "camunda:asyncAfter"
        }
      }
    ],
    "entriesVisible": {
      "_all": true,
      "delegate": false,
      "implementation": false,
      "asyncBefore": false,
      "asyncAfter": false,
      "exclusive": false,
      "documentation": false
    }
  },
  {
    "name": "Custom Mail Task",
    "id": "CustomMailTask",
    "appliesTo": [
      "bpmn:ServiceTask"
    ],
    "properties": [
      {
        "label": "Executor Component",
        "type": "String",
        "value": "${customMailTask}",
        "editable": true,
        "binding": {
          "type": "property",
          "name": "camunda:delegateExpression"
        }
      },
      {
        "label": "From",
        "type": "String",
        "binding": {
          "type": "camunda:inputParameter",
          "name": "custom_mail_from"
        },
        "constraints": {
          "notEmpty": true,
          "pattern": {
            "value": "^[A-z0-9._%+-]+@[A-z0-9.-]+\\.[A-z]{2,}$",
            "message": "Must be a valid email."
          }
        }
      },
      {
        "label": "To",
        "type": "String",
        "binding": {
          "type": "camunda:inputParameter",
          "name": "custom_mail_to"
        },
        "constraints": {
          "notEmpty": true
        }
      },
      {
        "label": "Subject",
        "type": "String",
        "binding": {
          "type": "camunda:inputParameter",
          "name": "custom_mail_subject"
        },
        "constraints": {
          "notEmpty": true
        }
      },
      {
        "label": "Content",
        "description": "By the way, you can use <a href=\"https://freemarker.apache.org/\">freemarker templates</a> here",
        "value": "Hello ${userName}!",
        "type": "Text",
        "binding": {
          "type": "camunda:inputParameter",
          "name": "custom_mail_content",
          "scriptFormat": "freemarker"
        },
        "constraints": {
          "notEmpty": true
        }
      },
      {
        "label": "Asynchronous Before",
        "type": "Boolean",
        "value": true,
        "binding": {
          "type": "property",
          "name": "camunda:asyncBefore"
        }
      },
      {
        "label": "Asynchronous After",
        "type": "Boolean",
        "value": true,
        "binding": {
          "type": "property",
          "name": "camunda:asyncAfter"
        }
      }
    ],
    "entriesVisible": {
      "_all": true,
      "delegate": false,
      "implementation": false,
      "asyncBefore": false,
      "asyncAfter": false,
      "exclusive": false,
      "documentation": false
    }
  }
]
